@inproceedings{fonseca_study_2010,
 abstract = {Concurrent programming is increasingly important for achieving performance gains in the multi-core era, but it is also a difficult and error-prone task. Concurrency bugs are particularly difficult to avoid and diagnose, and therefore in order to improve methods for handling such bugs, we need a better understanding of their characteristics. In this paper we present a study of concurrency bugs in MySQL, a widely used database server. While previous studies of real-world concurrency bugs exist, they have centered their attention on the causes of these bugs. In this paper we provide a complementary focus on their effects, which is important for understanding how to detect or tolerate such bugs at run-time. Our study uncovered several interesting facts, such as the existence of a significant number of latent concurrency bugs, which silently corrupt data structures and are exposed to the user potentially much later. We also highlight several implications of our findings for the design of reliable concurrent systems.},
 author = {Fonseca, P. and Cheng Li and Singhal, V. and Rodrigues, R.},
 booktitle = {2010 IEEE/IFIP International Conference on Dependable Systems Networks (DSN)},
 doi = {10.1109/DSN.2010.5544315},
 keywords = {parallel programming, SQL, Computer bugs, concurrency bug, Concurrent computing, concurrent programming, data structure, database server, error prone task, Fault detection, Interleaved codes, Manufacturing processes, multicore era, multiprocessing programs, MySQL, Performance gain, program debugging, Programming profession, Software performance, Software systems},
 month = {June},
 note = {ISSN: 2158-3927},
 pages = {221--230},
 title = {A study of the internal and external effects of concurrency bugs},
 year = {2010}
}

